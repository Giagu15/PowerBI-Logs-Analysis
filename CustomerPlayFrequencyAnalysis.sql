declare vFechaProcesoIni date;
declare vFechaProcesoFin date;
set vFechaProcesoIni = "2024-10-24";
set vFechaProcesoFin = "2024-12-02";
  WITH


CLIENTES_MAD AS (
  SELECT progDocCliente AS cliente_identificado,   date(progFechaRegistroMonederoDigital) AS fecha_registro,  
  progFechaRegistroMonederoDigital HORA_REG, progCanalRegistro_MD
  FROM `pe-farm-peruanas-gcp.master_genoma.tprograma`
  -- WHERE progFlagMonederoTradicional=1 AND progFlagMonederoDigital=1
),
 CUPON_RULETA AS (
    SELECT DISTINCT COD_CAMP_CUPON, DESC_CUPON
    FROM `pe-farm-peruanas-gcp.MFARMA.APPS_VTA_CAMPANA_CUPON`
    WHERE (TIPO_DESC_CAMPANA IN ('D') OR DESC_CUPON LIKE '%12% dscto. en Medicamentos%')
        AND SUBSTR(DESC_CUPON, 1, 5) <> 'INKA.'
        AND (TIPO_CAMPANA_FUGAZ <> 'FP' OR TIPO_CAMPANA_FUGAZ IS NULL)
        AND TIP_CAMP_DIG IS NOT NULL
),
BASE_SUD AS (
   SELECT DISTINCT  FILIAL_ID, CORPORACION, NUM_PED_VTA_ORIG, FEC_VTA,IFNULL(CLIENTE_IDENTIFICADO,ID_CLIENTE)  ID_CLIENTE, SUBSTR(A.CAMPANIA_ID, 4,5) COD_CAMP_CUPON
   FROM pe-farm-peruanas-gcp.DS_COMPARTIDO.SALIDA_UNION_DIARIO_VENTAS a
   INNER JOIN CUPON_RULETA CR ON SUBSTR(A.CAMPANIA_ID, 4,5)=CR.COD_CAMP_CUPON
   WHERE FEC_VTA BETWEEN vFechaProcesoIni AND vFechaProcesoFin
   and comprobante_id not like ('NC%')
  ),
BASE_CUPONES AS (
    SELECT DISTINCT COD_LOCAL, CASE WHEN COD_GRUPO_CIA = '001' THEN 'MIFARMA' END AS CORPORACION
    , NUM_PED_VTA, COD_CUPON, A.COD_CAMP_CUPON, DESC_CUPON
    FROM  pe-farm-peruanas-gcp.MFARMA.PTOVENTA_VTA_PEDIDO_USO_CUPON A
    INNER JOIN CUPON_RULETA CR ON A.COD_CAMP_CUPON=CR.COD_CAMP_CUPON
    WHERE FECHA BETWEEN vFechaProcesoIni AND vFechaProcesoFin
),

CUPONES_REDIMIDOS AS (
  SELECT ID_CLIENTE AS DNI_REDENCION, COD_CUPON AS CUPON_ID, A.COD_CAMP_CUPON, DESC_CUPON, MIN(FEC_VTA) AS FECHA_REDENCION
  FROM  BASE_CUPONES A
  INNER JOIN BASE_SUD B
  ON A.COD_LOCAL = B.FILIAL_ID AND A.CORPORACION = B.CORPORACION AND A.NUM_PED_VTA = B.NUM_PED_VTA_ORIG
  AND A.COD_CAMP_CUPON= B.COD_CAMP_CUPON
  GROUP BY 1,2,3,4
),

CUPONES_REDIMIDOS_2 AS (
  SELECT 
  B. DNI_REDENCION ID_CLIENTE, FECHA_REDENCION PERIODO,
  -- CASE WHEN M.cliente_identificado IS NOT NULL THEN 1
  --       WHEN B.DNI_REDENCION IS NOT NULL THEN 0
  --       ELSE NULL  END AS FLG_MATCH
  FROM CUPONES_REDIMIDOS B
  LEFT JOIN CLIENTES_MAD AS M ON B.DNI_REDENCION=M.cliente_identificado AND B.FECHA_REDENCION>=M.fecha_registro
 WHERE M.cliente_identificado IS NOT NULL
),

CUPONES_REDIMIDOS_CLIENTE AS (
  SELECT 
  B. DNI_REDENCION ID_CLIENTE, MIN(FECHA_REDENCION) PERIODO_I,
  -- CASE WHEN M.cliente_identificado IS NOT NULL THEN 1
  --       WHEN B.DNI_REDENCION IS NOT NULL THEN 0
  --       ELSE NULL  END AS FLG_MATCH
  FROM CUPONES_REDIMIDOS B
  LEFT JOIN CLIENTES_MAD AS M ON B.DNI_REDENCION=M.cliente_identificado AND B.FECHA_REDENCION>=M.fecha_registro
 WHERE M.cliente_identificado IS NOT NULL
 group by 1
),



SEGUIMIENTO_MENSUAL AS (
    SELECT
        I1.PERIODO_I AS PERIODO_INICIAL,
        I2.PERIODO AS PERIODO_POSTERIOR,
        COUNT(DISTINCT I1.ID_CLIENTE) AS CLIENTES_INICIALES,
--         COUNT(DISTINCT CASE WHEN I2.ID_CLIENTE IS NOT NULL THEN I1.ID_CLIENTE END) AS CLIENTES_QUE_REPETEN
    FROM CUPONES_REDIMIDOS_CLIENTE I1
    LEFT JOIN CUPONES_REDIMIDOS_2 I2
    ON I1.ID_CLIENTE = I2.ID_CLIENTE
    AND I2.PERIODO >= I1.PERIODO_I  -- Seguimiento en periodos posteriores
    GROUP BY 1,2
    ORDER BY 1,2
)

-- Resultados en formato de tabla dinámica (triángulo invertido)
SELECT
    PERIODO_INICIAL AS MES_INICIAL,
    PERIODO_POSTERIOR AS MES_SEGUIMIENTO,
    CLIENTES_INICIALES,
    -- ROUND(CLIENTES_QUE_REPETEN / CLIENTES_INICIALES * 100, 2) AS PORCENTAJE_REPETICION
FROM SEGUIMIENTO_MENSUAL
-- WHERE PERIODO_POSTERIOR IS NOT NULL
ORDER BY MES_INICIAL, MES_SEGUIMIENTO;